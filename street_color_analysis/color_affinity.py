# -*- coding: utf-8 -*-
"""Color Affinity.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15WcDWFJgsAUqRMH2NJNECd1InKawx6eg
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.cluster.hierarchy import dendrogram, linkage

# Read CSV file
file_path = '/content/drive/MyDrive/SHOPHOUSE/shophouse color analyse/data csv/street two sides/Updated_Final_Merged_Data_5.2.csv'
data = pd.read_csv(file_path)

# Build color feature vectors for clustering
color_vectors_for_clustering = []
color_blocks_for_histogram = {}
labels = []

for (district, street), group in data.groupby(['District', 'Street ID']):
    color_vector = []
    colors = []  # For histogram
    # Sort group by 'S_times_V' column before processing
    group = group.sort_values(by='S_times_V', ascending=True)
    for _, row in group.iterrows():
        # Only use normalized S and V values and include weighted Top10_S_times_V_Avg
        color_vector.extend([
            row['S'] / 100,  # Normalized S
            row['V'] / 100,  # Normalized V
            np.log1p(row['Top10_S_times_V_Avg'] / 100)  # Apply log transformation to normalized Top10_S_times_V_Avg
        ])
        # Prepare RGB colors for histogram
        rgb_color = (row['R'] / 255, row['G'] / 255, row['B'] / 255)  # Normalize RGB values
        colors.append((rgb_color, row['S_times_V']))  # Append RGB color with S_times_V for sorting

    color_vectors_for_clustering.append(color_vector)
    street_label = f"{district}_{street}"
    labels.append(street_label)
    color_blocks_for_histogram[street_label] = colors  # Store colors for histogram

# Perform hierarchical clustering using the Ward method
Z = linkage(color_vectors_for_clustering, method='ward')
Z[:, 2] = np.log1p(Z[:, 2])  # Apply log transformation to the distance column in linkage matrix

# Create canvas
fig, axes = plt.subplots(2, 1, figsize=(20, 15), gridspec_kw={'height_ratios': [1, 1]})

# Draw dendrogram
dendro = dendrogram(Z, labels=labels, leaf_rotation=90, leaf_font_size=8, ax=axes[0])
axes[0].set_title("Hierarchical Clustering Dendrogram (Using Ward's Method)")
axes[0].set_ylabel("Log Transformed Distance")

# Get label order from dendrogram for consistent ordering in histogram
sorted_labels = dendro['ivl']

# Draw color histogram
for idx, label in enumerate(sorted_labels):
    colors = color_blocks_for_histogram[label]
    colors.sort(key=lambda x: x[1])  # Sort colors by 'S_times_V'
    bottom = 0
    for color, _ in colors:
        axes[1].bar(idx, 1, bottom=bottom, color=color, align='center')
        bottom += 1

axes[1].set_xticks(range(len(sorted_labels)))
axes[1].set_xticklabels(sorted_labels, rotation=90)
axes[1].set_title("Color Distribution per Street ID")
axes[1].set_ylim(0, len(max(color_blocks_for_histogram.values(), key=len)))  # Adjust Y-axis to fit the maximum number of color blocks

# Adjust layout
plt.tight_layout()

# Save and display graphics
pdf_file_path = '/content/drive/MyDrive/SHOPHOUSE/shophouse color analyse/street color match4.23/combined_visualization_top10hueave18.pdf'
jpg_file_path = '/content/drive/MyDrive/SHOPHOUSE/shophouse color analyse/street color match4.23/combined_visualization_top10hueave18.jpg'
plt.savefig(pdf_file_path, format='pdf')
plt.savefig(jpg_file_path, format='jpg')
plt.show()